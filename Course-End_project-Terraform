Create a keypair in AWS

Generate a key pair in AWS and associate it to your Ec2 instance, so as to connect to it

Select keypairs in the search box and click on key pairs

Click on create key pair

Give name : demo1
Select Key pair type : ED25519

Select Private key file format : .pem



> Open the awsinfra.tf file
> remove the existing resource block
> Add the below resource block


resource "aws_security_group" "mysg" {
name        = "mysg"

  description = "Allow inbound SSH"



  ingress {

    from_port        = 22

    to_port          = 22

    protocol         = "tcp"

    cidr_blocks      = ["0.0.0.0/0"]

    ipv6_cidr_blocks = ["::/0"]

  }
ingress {

     description = "HTTP"

     from_port   = 8080

     to_port     = 8080

     protocol    = "tcp"

     cidr_blocks = ["0.0.0.0/0"]

   }

     egress {

     from_port   = 0

     to_port     = 0

     protocol    = "-1"

     cidr_blocks = ["0.0.0.0/0"]

   }

}

resource "aws_instance" "myec2" {

ami = "ami-0a699202e5027c10d"

instance_type = "t2.micro"

key_name = "web-key"

tags = {

    Name = "instance-1"

  }

 user_data = <<-EOF

      #!/bin/bash

        sudo yum install git -y

        sudo amazon-linux-extras install java-openjdk11 -y
         sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
       sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
      sudo yum install jenkins -y
       sudo systemctl start jenkins
 sudo yum install python3 -y

EOF


}



resource "aws_network_interface_sg_attachment" "sg_attachment1" {

security_group_id = aws_security_group.mysg.id

network_interface_id = aws_instance.myec2.primary_network_interface_id



}



Save the file

# terraform apply

Give : yes

Go to aws: ec2 dashboard.. Check the instance, it should be running

